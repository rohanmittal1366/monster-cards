{"version":3,"sources":["components/card/Card.js","components/cardList/CardList.js","App.js","index.js"],"names":["Card","props","className","src","monsters","id","alt","name","CardList","map","App","handleChange","e","setState","searchField","target","value","state","this","filteredMonsters","filter","monster","toLowerCase","includes","type","placeholder","onChange","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+SAGaA,EAAO,SAACC,GACnB,OACE,sBAAKC,UAAU,iBAAf,UACE,qBACEC,IAAG,+BAA0BF,EAAMG,SAASC,GAAzC,0BACHC,IAAI,YAEN,mCACG,IACD,6BAAKL,EAAMG,SAASG,cCRfC,EAAW,SAACP,GACvB,OACE,qBAAKC,UAAU,WAAf,SACGD,EAAMG,SAASK,KAAI,SAACL,GAAD,OAClB,cAAC,EAAD,CAAwBA,SAAUA,GAAvBA,EAASC,UCoEbK,E,kDAvEb,aAAe,IAAD,8BACZ,gBA8CFC,aAAe,SAACC,GACd,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,SA7CtC,EAAKC,MAAQ,CACXb,SAAU,CACR,CACEG,KAAM,QACNF,GAAI,KAEN,CACEE,KAAM,SACNF,GAAI,KAEN,CACEE,KAAM,WACNF,GAAI,KAEN,CACEE,KAAM,OACNF,GAAI,KAEN,CACEE,KAAM,SACNF,GAAI,KAEN,CACEE,KAAM,SACNF,GAAI,KAEN,CACEE,KAAM,OACNF,GAAI,KAEN,CACEE,KAAM,QACNF,GAAI,KAEN,CACEE,KAAM,WACNF,GAAI,MAIRS,YAAa,IA3CH,E,0CAkDd,WAAU,IAAD,EAC2BI,KAAKD,MAA/Bb,EADD,EACCA,SAAUU,EADX,EACWA,YAEZK,EAAmBf,EAASgB,QAAO,SAACC,GAAD,OACvCA,EAAQd,KAAKe,cAAcC,SAAST,EAAYQ,kBAElD,OACE,sBAAKpB,UAAU,MAAf,UACE,kDACA,uBACEA,UAAU,SACVsB,KAAK,SACLC,YAAY,kBACZC,SAAUR,KAAKP,eAEjB,cAAC,EAAD,CAAUP,SAAUe,W,GAlEVQ,IAAMC,WCCxBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.1b71deb3.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Card.css\";\r\n\r\nexport const Card = (props) => {\r\n  return (\r\n    <div className=\"card-container\">\r\n      <img\r\n        src={`https://robohash.org/${props.monsters.id}?set=set2&size=100x100`}\r\n        alt=\"monster\"\r\n      />\r\n      <center>\r\n        {\" \"}\r\n        <h2>{props.monsters.name}</h2>\r\n      </center>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport \"./cardList.css\";\r\nimport { Card } from \".././card/Card\";\r\n\r\nexport const CardList = (props) => {\r\n  return (\r\n    <div className=\"CardList\">\r\n      {props.monsters.map((monsters) => (\r\n        <Card key={monsters.id} monsters={monsters} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\nimport \"./App.css\";\nimport { CardList } from \"./components/cardList/CardList\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      monsters: [\n        {\n          name: \"Rohan\",\n          id: \"1\",\n        },\n        {\n          name: \"Kishan\",\n          id: \"2\",\n        },\n        {\n          name: \"Pradumna\",\n          id: \"3\",\n        },\n        {\n          name: \"Riya\",\n          id: \"4\",\n        },\n        {\n          name: \"Khushi\",\n          id: \"5\",\n        },\n        {\n          name: \"Sameer\",\n          id: \"6\",\n        },\n        {\n          name: \"Prem\",\n          id: \"7\",\n        },\n        {\n          name: \"Kannu\",\n          id: \"8\",\n        },\n        {\n          name: \"Kushagra\",\n          id: \"9\",\n        },\n      ],\n\n      searchField: \"\",\n    };\n  }\n\n  handleChange = (e) => {\n    this.setState({ searchField: e.target.value });\n  };\n  render() {\n    const { monsters, searchField } = this.state;\n\n    const filteredMonsters = monsters.filter((monster) =>\n      monster.name.toLowerCase().includes(searchField.toLowerCase())\n    );\n    return (\n      <div className=\"App\">\n        <h1>Monsters Rolodex</h1>\n        <input\n          className=\"search\"\n          type=\"search\"\n          placeholder=\"Search monsters\"\n          onChange={this.handleChange}\n        />\n        <CardList monsters={filteredMonsters} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}